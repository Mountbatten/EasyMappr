var jQT = $.jQTouch({
	icon: 'kilo.png',
	
	});

$(document).ready(function(){

$('.butn').hide();
$('.des').hide();

if (typeof(PhoneGap) != 'undefined') {
$('body > *').css({minHeight: window.innerHeight + 'px !important'});
}


var shortName = 'emappr';
var version = '1.0';
var displayName = 'Emapper';
var maxSize = 100000;

db = openDatabase(shortName, version, displayName, maxSize);

db.transaction(
function(transaction) {
transaction.executeSql(
'CREATE TABLE IF NOT EXISTS users ' +
' (id INTEGER NOT NULL, ' +
' time TEXT NOT NULL, usr TEXT NOT NULL, ' +
' latlong TEXT NOT NULL, '+' submitted TEXT NOT NULL');
);
}
);

db.transaction(
function(transaction) {
transaction.executeSql(
'CREATE TABLE IF NOT EXISTS submissions ' +
' (id INTEGER NOT NULL, ' +
' key TEXT NOT NULL, value TEXT NOT NULL');
);
}
);


$.ajax({
 	type: "GET",
  	url: "http://192.168.38.147/presets/ParkingLanes.xml",
  	dataType: "xml",
  	success: function(xml){
  		
   	$.blockUI({message:'<h2>Finding Location...</h2>',
	 css: { 
		padding:        50, 
		margin:         0, 
		width:          '100%', 
		top:            '0%', 
		left:           '0%', 
		textAlign:      'center', 
		color:          '#000', 
		border:         '3px solid #aaa', 
		backgroundColor:'#fff', 
		cursor:         'wait' 
	    }
		   
		});
	
   	$("#openingmessage").html($(xml).find("presets").attr("shortdescription"));
   	$("#desc").html($(xml).find("presets").attr("description"));
  		$('.des').show();
  		
  		var fieldset;

			var fix = $(xml).find('item');
			var t = 0;
			
			fix.each(function()
		{
			var form1 = $('<form></form>');
			fieldset = $('<fieldset></fieldset><br/>');
			var item = $(this).attr('name');
			var leg = $('<legend><b>'+ucwords(item)+'</b></legend><br/>');

			fieldset.append(leg);

			//alert('fieldset created');
			
			

			$(this).find('label').each(function()
		{
		
			var a = new Array();
			a[t] = $(this).attr('text');
			var lab = $('<label>'+ucwords(a[t])+'</label><br/>');
			fieldset.append(lab);
					
			t++;
		
		});
		
		//	if(t==0)
		//	{
				
			$(this).find('combo').each(function()
		{
			var k = $(this).siblings('combo');
			if(k>0){
			var txt = $(this).attr('text');
			var labco = $('<label>'+ucwords(txt)+'</label><br/>');

			fieldset.append(labco);
			
			var arr = $(this).attr('values');

			var valu = arr;
			var substrg = valu.split(','); 
			
			var x = 0;
			
			while(x<substrg.length)
		{

			var labl 	= $('<label>'+substrg[x]+'</label><br/>');
			
			var radio = $('<input type="radio" name="dynradio" value='+substrg[x]+' />');

			var pile = labl.prepend(radio);
						
			fieldset.append(pile);

			x=x+1;
		}
		}else{
			
			var txt = $(this).attr('text');
			var labco = $('<label>'+ucwords(txt)+'</label><br/>');

			fieldset.append(labco);
			
			var arr = $(this).attr('values');

			var valu = arr;
			var substrg = valu.split(','); 
			
			var x = 0;
			
			while(x<substrg.length)
		{

			var labl 	= $('<label>'+substrg[x]+'</label><br/>');
			
			var radio = $('<input type="radio" name="dynradio" value='+substrg[x]+' />');

			var pile = labl.prepend(radio);
						
			fieldset.append(pile);

			x=x+1;
		}			
			
			}
		
		});	
		
		
			$(this).find('text').each(function()
		{
		
			var textbName = $(this).attr('text');
			
			var labo = $('<label class='+textbName+'><-'+textbName+'</label>');
			
			//fieldset.append(labo);
			
			var textbx = $('<input/>').attr({ type: 'text', name:textbName});			
			
			
			var mix = labo.prepend(textbx);
			var newline = $('<br/>');
			
			fieldset.append(mix);
			fieldset.append(newline);
		
		});		
		
		
		
		$(this).find('key').each(function()
		{
		
			var key = $(this).attr('key');
			var keyval = $(this).attr('value');
			
			var textb = $('<input/>').attr({ type: 'text', name:key, value:keyval, hidden:'hidden'});			
			
			var lab = $('<label>'+ucwords(key)+'</label><br/>');
			
			var combined = textb.appendTo(lab);
			
			fieldset.append(combined);
					
					
		});
						
				
			fieldset.appendTo('.myform');
			
			
		});
  	
  }
  
  
});


	//loadSettings();


// Wait for PhoneGap to load
    
    document.addEventListener("deviceready", onDeviceReady, false);

    var watchID = null;

    // PhoneGap is ready
    
    function onDeviceReady() {
        
        var options = { enableHighAccuracy: true };
        watchID = navigator.geolocation.watchPosition(onSuccess, onError, options);
    }

    // onSuccess Geolocation
    
    function onSuccess(position) {
	
        var element = document.getElementById('geolocation');
        element.innerHTML = 'Lat:'  + position.coords.latitude      + ',' +
                            'Long:' + position.coords.longitude;

	$.unblockUI();
    }

    // onError Callback receives a PositionError object

 //
    function onError(error) {
        alert('code: '    + error.code    + '\n' +
              'message: ' + error.message + '\n');
    }

});


function saveSettings() {
localStorage.serverUrl = $('#presets').val();
jQT.goBack();
return false;
}

function loadSettings() {
$("[name=presets]").filter("[value="+$('#presets').val(localStorage.serverUrl)+"]").attr("checked","checked");

}
		
		
		function ucwords(input) {
    var words = input.split(/(\s|-)+/),
        output = [];

    for (var i = 0, len = words.length; i < len; i += 1) {
        output.push(words[i][0].toUpperCase() +
                    words[i].toLowerCase().substr(1));
    }

    return output.join('');
}


function userEntry() 
{
var idd = $('#idd').val();
var tym = $('#time').val();
var usrr = $('#user').val();
var lats = $('#latlong').val();
var submitd = 0;

if(idd != "" && tym !="" && usrr != "" && lats !="")
{

db.transaction(
function(transaction) {
transaction.executeSql(
'INSERT INTO users (id, time, user, latlong, submitted) VALUES (?, ?, ?);',
[idd, tym, usrr, lats, submitd],
function(){
	
$('#home').show();

alert('id='+idd+' Time='+tym+' User='+usrr+' Lat/lon='+lats);	
},
errorHandler
);
}
);
return false;
}else
	{
alert('Please Enter All Values');	
	}

}

function errorHandler(transaction, error) {
alert('Oops. Error was '+error.message+' (Code '+error.code+')');
return true;
}
